package nsu.syspro.parser.nonterms;

import syspro.tm.parser.AnySyntaxKind;

public enum AdditionalSyntaxKind implements AnySyntaxKind {
    NAME_EXPRESSION,
    TERMINAL,
    DEFINITION,
    STATEMENT,
    VAR_OR_VAL,
    EXPRESSION,
    PRIMARY,

    // additional primaries (left recursion)
    MEMBER_ACCESS_EXPRESSION_HATCH,
    INVOCATION_EXPRESSION_HATCH,
    INDEX_EXPRESSION_HATCH,

    LOGICAL_AND_EXPRESSION_REDUCED,
    LOGICAL_OR_EXPRESSION_REDUCED,
    LOGICAL_NOT_EXPRESSION_REDUCED,
    EQUALS_EXPRESSION_REDUCED,
    NOT_EQUALS_EXPRESSION_REDUCED,
    LESS_THAN_EXPRESSION_REDUCED,
    LESS_THAN_OR_EQUAL_EXPRESSION_REDUCED,
    GREATER_THAN_EXPRESSION_REDUCED,
    GREATER_THAN_OR_EQUAL_EXPRESSION_REDUCED,
    IS_EXPRESSION_REDUCED,
    BITWISE_AND_EXPRESSION_REDUCED,
    BITWISE_OR_EXPRESSION_REDUCED,
    BITWISE_EXCLUSIVE_OR_EXPRESSION_REDUCED,
    BITWISE_LEFT_SHIFT_EXPRESSION_REDUCED,
    BITWISE_RIGHT_SHIFT_EXPRESSION_REDUCED,
    ADD_EXPRESSION_REDUCED,
    SUBTRACT_EXPRESSION_REDUCED,
    MULTIPLY_EXPRESSION_REDUCED,
    DIVIDE_EXPRESSION_REDUCED,
    MODULO_EXPRESSION_REDUCED,
    UNARY_PLUS_EXPRESSION_REDUCED,
    UNARY_MINUS_EXPRESSION_REDUCED,
    BITWISE_NOT_EXPRESSION_REDUCED,

    LOGICAL_AND_EXPRESSION_HATCH,
    LOGICAL_OR_EXPRESSION_HATCH,
    LOGICAL_NOT_EXPRESSION_HATCH,
    EQUALS_EXPRESSION_HATCH,
    NOT_EQUALS_EXPRESSION_HATCH,
    LESS_THAN_EXPRESSION_HATCH,
    LESS_THAN_OR_EQUAL_EXPRESSION_HATCH,
    GREATER_THAN_EXPRESSION_HATCH,
    GREATER_THAN_OR_EQUAL_EXPRESSION_HATCH,
    IS_EXPRESSION_HATCH,
    BITWISE_AND_EXPRESSION_HATCH,
    BITWISE_OR_EXPRESSION_HATCH,
    BITWISE_EXCLUSIVE_OR_EXPRESSION_HATCH,
    BITWISE_LEFT_SHIFT_EXPRESSION_HATCH,
    BITWISE_RIGHT_SHIFT_EXPRESSION_HATCH,
    ADD_EXPRESSION_HATCH,
    SUBTRACT_EXPRESSION_HATCH,
    MULTIPLY_EXPRESSION_HATCH,
    DIVIDE_EXPRESSION_HATCH,
    MODULO_EXPRESSION_HATCH,
    UNARY_PLUS_EXPRESSION_HATCH,
    UNARY_MINUS_EXPRESSION_HATCH,
    BITWISE_NOT_EXPRESSION_HATCH,


    SIMPLE_PRIMARY,

    PRIMARY_WITHOUT_MEMBER_ACCESS_EXPRESSION,
    PRIMARY_WITHOUT_INVOCATION_EXPRESSION,
    PRIMARY_WITHOUT_INDEX_EXPRESSION,

    // Generative non-terminals
    OR,
    QUESTION
}
